name: "Frogbot Security Scans"

on:
  pull_request_target:
    types: [opened, synchronize]
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  security-events: write

jobs:
  detect-mode:
    runs-on: ubuntu-latest
    outputs:
      run-pr-scan: ${{ steps.set.outputs.run_pr }}
      run-schedule-scan: ${{ steps.set.outputs.run_schedule }}
    steps:
      - id: set
        run: |
          echo "run_pr=false" >> $GITHUB_OUTPUT
          echo "run_schedule=false" >> $GITHUB_OUTPUT

          if [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
            echo "run_pr=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "schedule" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "run_schedule=true" >> $GITHUB_OUTPUT
          fi

  scan-pull-request:
    needs: detect-mode
    if: needs.detect-mode.outputs.run-pr-scan == 'true'
    runs-on: ubuntu-latest
    environment: frogbot
    steps:
      - uses: jfrog/frogbot@v2
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
          JF_GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  scan-repository:
    needs: detect-mode
    if: needs.detect-mode.outputs.run-schedule-scan == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ["master"]
    steps:
      - uses: jfrog/frogbot@v2
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
          JF_GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JF_GIT_BASE_BRANCH: ${{ matrix.branch }}
